openapi: 3.0.0
servers:
  - url: '/api'
info:
  version: 1.0.0-oas3
  title: Sample Application Flow OAuth2 Project
  description: >-
    This is an example of using OAuth2 Application Flow in a specification to
    describe security to your API.
security:
  - application:
      - read
      - write
paths:
  /questionnaires:
    get:
      tags:
        - questionnaire
      description: 与えられた条件を満たす20件以下のアンケートのリストを取得します．8/14変更 (parametersのsortのクエリを変更、正負で昇順・降順を表すようにした) 9/7変更 (deleted_at を消した)
      parameters:
        - name: sort
          in: query
          description: 並び順 (作成日時が新しい "created_at", 作成日時が古い "-created_at", タイトルの昇順 "title",
            タイトルの降順 "-title", 更新日時が新しい "modified_at", 更新日時が古い
            "-modified_at" )
          schema:
            type: string
        - name: page
          in: query
          description: 何ページ目か (未定義の場合は1ページ目)
          schema:
            type: integer
        - name: nontargeted
          in: query
          description: '自分がターゲットになっていないもののみ取得 (true), ターゲットになっているものも含めてすべて取得 (false)'
          schema:
            type: boolean
      responses:
        '200':
          description: 正常に取得できました。アンケートの配列を返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    questionnaireID:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    res_time_limit:
                      type: string
                    created_at:
                      type: string
                    modified_at:
                      type: string
                    res_shared_to:
                      type: string
                    is_targeted:
                      type: boolean
    post:
      tags:
        - questionnaire
      description: 新しいアンケートを作成します．9/7変更 (deleted_at を消した)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                res_time_limit: 
                  type: string
                res_shared_to:
                  type: string
                targets:
                  type: array
                  items:
                    type: string
                administrators:
                  type: array
                  items:
                    type: string
                
                    
      responses:
        '200':
          description: 正常にアンケートを作成できました．作成されたアンケートを返します．
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  res_time_limit:
                    type: string
                  created_at:
                    type: string
                  modified_at:
                    type: string
                  res_shared_to:
                    type: string
                  targets:
                    type: array
                    items:
                      type: string
                  administrators:
                    type: array
                    items:
                      type: string
  '/questionnaires/{questionnaireID}':
    get:
      tags:
        - questionnaire
      description: アンケートの情報を取得します。8/14変更 (responsesのjsonオブジェクトにadministratorsを追加) 9/7変更 (deleted_at を消した)
      parameters:
        - name: questionnaireID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 正常に取得できました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  res_time_limit:
                    type: string
                  created_at:
                    type: string
                  modified_at:
                    type: string
                  res_shared_to:
                    type: string
                  targets:
                    type: array
                    items:
                      type: string
                  administrators:
                    type: array
                    items:
                      type: string
                  respondents:
                    type: array
                    items:
                      type: string
    patch:
      tags:
        - questionnaire
      description: アンケートの情報を変更します．
      parameters:
        - name: questionnaireID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                res_time_limit: 
                  type: string
                res_shared_to:
                  type: string
                targets:
                  type: array
                  items:
                    type: string
                administrators:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: 正常にアンケートを変更できました．
    delete:
      tags:
        - questionnaire
      description: アンケートを削除します．
      parameters:
        - name: questionnaireID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      responses:
        '200':
          description: 正常にアンケートを削除できました．
  '/questionnaires/{questionnaireID}/questions':
    get:
      tags:
        - questionnaire
      summary:
        9/7 変更
      description: アンケートに含まれる質問のリストを取得します。8/18変更 (responsesのjsonオブジェクトにscale_labelを追加)　9/7変更 (scale_min, maxを追加)
      parameters:
        - name: questionnaireID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 正常に取得できました。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    questionID:
                      type: integer
                    page_num:
                      type: integer
                    question_num:
                      type: integer
                    question_type:
                      type: string
                    body:
                      type: string
                    is_required:
                      type: boolean
                    created_at:
                      type: string
                    options:
                      type: array
                      items:
                        type: string
                    scale_label_right:
                      type: string
                    scale_label_left:
                      type: string
                    scale_min:
                      type: integer
                    scale_max:
                      type: integer
                        
  /questions:
    post:
      tags:
        - question
      description: 新しい質問を作成します．8/18変更 (responsesのjsonオブジェクトにscale_labelを追加) 9/7変更 (scale_min, maxを追加)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionnaireID:
                  type: integer
                question_type:
                  type: string
                question_num:
                  type: integer
                page_num:
                  type: integer
                body:
                  type: string
                is_required:
                  type: boolean
                options:
                  type: array
                  items:
                    type: string
                scale_label_right:
                  type: string
                scale_label_left:
                  type: string
                scale_min:
                  type: integer
                scale_max:
                  type: integer
      responses:
        '200':
          description: 正常に質問を作成できました．作成された質問を返します．
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionID:
                    type: integer
                  questionnaireID:
                    type: integer
                  question_type:
                    type: string
                  question_num:
                    type: integer
                  page_num:
                    type: integer
                  body:
                    type: string
                  is_required:
                    type: boolean
                  options:
                    type: array
                    items:
                      type: string
        '400':
          description: 正常に作成できませんでした。リクエストが不正です。
  '/questions/{questionID}':
    patch:
      tags:
        - question
      description: 質問を変更します．8/18変更 (responsesのjsonオブジェクトにscale_labelを追加) 9/7変更 (scale_min, maxを追加)
      parameters:
        - name: questionID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionID:
                  type: integer
                question_type:
                  type: string
                question_num:
                  type: integer
                page_num:
                  type: integer
                body:
                  type: string
                is_required:
                  type: boolean
                options:
                  type: array
                  items:
                    type: string
                scale_label_right:
                  type: string
                scale_label_left:
                  type: string
                scale_min:
                  type: integer
                scale_max:
                  type: integer
      responses:
        '200':
          description: 正常に質問を変更できました．
        '400':
          description: 正常に変更できませんでした。リクエストが不正です。
    delete:
      tags:
        - question
      description: 質問を削除します．
      parameters:
        - name: questionID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      responses:
        '200':
          description: 正常に質問を削除できました。
        '400':
          description: 正常に削除できませんでした。存在しない質問です。
    
  /responses/:
    post:
      tags:
        - response
      description: 新しい回答を作成します．8/17 URLを変更
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionnaireID:
                    type: integer
                submitted_at:
                    type: string
                body:
                  type: array
                  items:
                    type: object
                    properties:
                      questionID:
                        type: integer
                      question_type:
                        type: string
                      response:
                        type: string
                      option_response:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: 正常に回答を作成できました．作成された回答を返します．
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseID:
                    type: integer
                  questionnaireID:
                    type: integer
                  submitted_at:
                    type: string
                  modified_at:
                    type: string
                  body:
                    type: array
                    items:
                      type: object
                      properties:
                        questionID:
                          type: integer
                        question_type:
                          type: string
                        response:
                          type: string
                        option_response:
                          type: array
                          items:
                            type: string
                    
  '/responses/{responseID}':
  
    get:
      tags:
        - response
      #summary: 未定義
      description: あるresponseIDを持つ回答に含まれる全ての質問に対する自分の回答を取得します
      parameters:
        - name: responseID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      responses:
        '200':
          description: 正常に取得できました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: integer
                  submitted_at:
                    type: string
                  modified_at:
                    type: string
                  body:
                    type: array
                    items:
                      type: object
                      properties:
                        questionID:
                          type: integer
                        question_type:
                          type: string
                        response:
                          type: string
                        option_response:
                          type: array
                          items:
                            type: string
    
    
    patch:
      tags:
        - response
      #summary: 未定義
      description: 回答を変更します．
      parameters:
        - name: responseID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionnaireID:
                    type: integer
                submitted_at:
                    type: string
                body:
                  type: array
                  items:
                    type: object
                    properties:
                      questionID:
                        type: integer
                      question_type:
                        type: string
                      response:
                        type: string
                      option_response:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: 正常に回答を変更できました．
    delete:
      tags:
        - response
      description: 回答を削除します．
      parameters:
        - name: responseID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      responses:
        '200':
          description: 正常に回答を削除できました．
  /users:
    get:
      tags:
        - user
      summary: 5/25 変更
      description: (botおよび除名されたユーザーを除く、全ての) ユーザーのtraQIDのリストを取得します。
      responses:
        '200':
          description: 正常に取得できました．ユーザーの配列を返します．
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: traQID
                    displayName:
                      type: string
                    iconFileId:
                      type: string
                      format: uuid
                    twitterId:
                      type: string
                    lastOnline:
                      type: string
                      format: date-time
                      description: 最終オンライン日時(オンラインに１度もなってない場合はnull)
                    isOnline:
                      type: boolean
                      description: 現在オンラインかどうか
  /users/me:
    get:
      tags:
        - user
      description: 自分のユーザー情報を取得します
      responses:
        '200':
          description: 正常に取得できました。
          content:
            application/json:
              schema:
                type: object
                properties:
                  traqID:
                    type: string
                    
  /users/me/responses:
    get:
      tags:
        - user
      # summary:
      description: 自分のすべての回答のリストを取得します。
      responses:
        '200':
          description: 正常に取得できました。回答の配列を返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    responseID:
                      type: integer
                    questionnaireID:
                      type: integer
                    questionnaire_title:
                      type: string
                    res_time_limit:
                      type: string
                    submitted_at:
                      type: string
                    modified_at:
                      type: string
  /users/me/responses/{questionnaireID}:
    get:
      tags:
        - user
      # summary: 
      parameters:
        - name: questionnaireID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      description: 特定のquestionnaireIdを持つアンケートに対する自分のすべての回答のリストを取得します。
      responses:
        '200':
          description: 正常に取得できました。回答の配列を返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    responseID:
                      type: integer
                    questionnaireID:
                      type: integer
                    questionnaire_title:
                      type: string
                    res_time_limit:
                      type: string
                    submitted_at:
                      type: string
                    modified_at:
                      type: string                    
  /users/me/targeted:
    get:
      tags:
        - user
      # summary: 
      description: 自分が対象になっている アンケートのリストを取得します。 9/7変更 (deleted_at を消した)
      responses:
        '200':
          description: 正常に取得できました。アンケートの配列を返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    questionnaireID:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    res_time_limit:
                      type: string
                    created_at:
                      type: string
                    modified_at:
                      type: string
                    res_shared_to:
                      type: string
                    responded_at:
                      type: string
  /users/me/administrates:
    get:
      tags:
        - user
      description: 自分が管理者になっているアンケートのリストを取得します。8/14変更 (URLを変更、responsesのjsonオブジェクトにadministratorsを追加) 9/7変更 (deleted_at を消した)
      responses:
        '200':
          description: 正常に取得できました。アンケートの配列を返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    questionnaireID:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    res_time_limit:
                      type: string
                    created_at:
                      type: string
                    modified_at:
                      type: string
                    res_shared_to:
                      type: string
                    all_responded:
                      type: boolean
                    targets:
                      type: array
                      items:
                        type: string
                    administrators:
                      type: array
                      items:
                        type: string
                    respondents:
                      type: array
                      items:
                        type: string
  /groups:
    get:
      tags:
        - group
      summary: 5/25 追加
      description: (全ての) グループのリストを取得します
      responses:
        '200':
          description: 正常に取得できました．グループの配列を返します．
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    groupId:
                      type: string
                      format: uuid
                    name:
                      type: string
                    description:
                      type: string
                    adminUser:
                      type: string
                      example: traQID
                    members:
                      type: array
                      items:
                        type: string
                        example: traQID
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
  /results/{questionnaireID}:
    get:
      tags:
        - result
      #summary: 8/18 変更 (旧/results/{questionnaireID})
      parameters:
        - name: questionnaireID
          in: path
          required: true
          #description: po
          schema:
            type: integer
      description: あるquestionnaireIDを持つアンケートの結果をすべて取得します。
      responses:
        '200':
          description: 正常に取得できました。アンケートの各質問に対する結果の配列を返します。
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    responseID:
                      type: integer
                    traqID:
                      type: string
                    submitted_at:
                      type: string
                    modified_at:
                      type: string
                    response_body:
                      type: array
                      items:
                        type: object
                        properties:
                          questionID:
                            type: integer
                          question_type:
                            type: string
                          response:
                            type: string
                          option_response:
                            type: array
                            items:
                              type: string
        '403':
          description: 結果を閲覧する権限がありません。
                    
    
          
components:
  schemas: {}
  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources